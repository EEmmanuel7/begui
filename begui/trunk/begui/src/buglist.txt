Font:
	- the fonts fall back to using GLUT when no font is loaded. In that case,
	the output of the positions of the rendered fonts (std::vector< Rect<int> > *char_pos_out)
	doesnt work.
		solve: probably remove GLUT fallback alltogether.
	FIXED in renderStringMultiline(): handle tabs, enter
	-take care of other non-printable characters
	-test:are non-printable characters working for renderString()???
	REGISTER THE POSITIONS OF NON-PRINTABLE CHARACTERS

RadioButtons:
	FIXED: when inactive, the radiobutton image appears 1px to the left
	FIXED: grouping
	
Container:
	FIXED: in mouse methods, correct the coordinates passed to the mouse*Ex methods
			to be local (subtract m_left, m_top)
	FIXED: correct the AWFUL AND ABSOLUTELY STUPID AND DISGUSTING code in mouseDown
			method, to correctly handle component z-order, without special cases
			for always-on-top - keep m_children list z-ordered!
	FIXED?(check) Wrong coordinates on click in nested containers!!!
			
Menu:
	FIXED: click works on menuitems only if it is on the item text
	FIXED: fix general structure
	fix nested submenus
	provide pop-up menus
	FIXED: provide check-able menu items
	active/inactive menu items
	
Slider:
	FIXED: HARDCODED labels!!
	-if bindValue() is called with an invalid value in the live variable,
		rendering of the Slider fails. Fix!
	
Dialog:
	general structure for modal dialogs (needs revision!)
	
General:
	use functors instead of callbacks
	create a central class to store position of the widget images in the files
		to avoid hardcoded texture coordinates
	combine the above with a general texture manager
	add a central rendering unit to minimize texture/state changed. Keep
		dirty flags for geometry and maintain display lists
		
Component/Container:
	FIXED: ReleaseFocus does not work (it's not triggered)
	
TextBox:
	scrolling not implemented
	
BaseApp_Win:
	FIXED hardcoded font path!! (D:\\Windows\\Fonts\\tahoma.ttf)
	-check if tahoma.ttf can be redistributed. Find free tahoma font otherwise
	-cannot distringuish between left and right shift/ctrl, the code is the same
	-key translation from windows codes works ok but can cause problems in the future

TimeSeries:
	-Updater::update_all is now called from BaseApp_Win. There should be a mechanism
	for asynchronous updates, so that the new value of a variable is calculated when
	it's needed. This will get rid of a lot of redundant computations that now take place.
	
WindowResourceManager:
	loads resources relative to APPLICATION working dir (like ../bgui/resources/)
	
EditableText:
	-there are dead zones between the lines - a click there sets the cursor to the beginning of the text
	FIXED: the cursor is not blinking - it's now FADING in and out :D
	FIXED:program crashes on enter
	-other special keys not recognised
		FIXED: home/end
		page up/page down
	FIXED: shift+arrows etc not implemented
	-drag n drop not implemented
	-copy/paste not implemented
	-right click not implemented
	-problem with up/down in single-letter columns
	-TODO: test single-line editableText
	-create event hooks
		-make m_text a live variable?