#summary A Getting Started guide for a Windows app using beGUI

= Creating a new application using BeGUI =

<h2>Part 2: Creating a menu</h2>
	<p>The menu will be created during the initialization of our application. To do that, we should override the method <em>initialize()</em> of <em>BaseApp_Win</em>:</p>
	<code>
	class Application : public BaseApp_Win {
		...
	public:
		virtual bool initialize();
		...
	};
	</code>
	<p>In the Application.cpp file, we create the menu by making <em>initialize()</em> look as following:</p>
	<code>
	bool Application::initialize()
	{
		if (!BaseApp_Win::initialize())
			return false;
		// Get a pointer to the menu of the main window
		Menu &menu = FrameWindow::inst()->getMenu();
		// Create a new drop down menu
		Menu *pFileMenu = menu.addMenuItem("File", 1, Application::onMenu);
		// Add menu items to this menu.
		pFileMenu->addMenuItem("Open", 11, Application::onMenu);
		pFileMenu->addMenuItem("Save", 12, Application::onMenu);
		pFileMenu->addMenuItem("------------", -1, 0, true);
		pFileMenu->addMenuItem("Exit", 13, Application::onMenu);
		// Create a second drop down menu
		Menu *pSecondMenu = menu.addMenuItem("Another menu", 6, Application::onMenu);
		pSecondMenu->addMenuItem("Choice one", 62, Application::onMenu);
		pSecondMenu->addMenuItem("Choice two", 63, Application::onMenu);
		return true;
	}
	</code>
	<p>Here, <em>Application::onMenu(int)</em> is the method that will handle all menu-related events. It's a callback, so we will implement it as a static method of <em>Application</em>. It takes one argument, the id of the menu or menuitem clicked. Notice that this menuitem id is the second argument in <em>addMenuItem(...)</em>. Also, notice that to create a submenu, we just add menu items to a menu item.</p>
	<p>The callback for the menu is defined like this:</p>
	<code>
	class Application : public BaseApp_Win {
		...
	private:
		static void onMenu(int id);
		...
	};
	</code>
	<p>and in Application.cpp:</p>
	<code>
	void Application::onMenu(int id)
	{
		switch (id)
		{
			// handle menu events here
			...
		}
	}
</code>
	<p>Compile and run. Voila, a menu!</p>